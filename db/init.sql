-- Création de la base de données 
DROP DATABASE IF EXISTS TRANSPORT;
CREATE DATABASE TRANSPORT; 
USE TRANSPORT;
DROP TABLE IF EXISTS HORRAIRE, EXCEPTION, LANGUEPRINCIPALE, ARRET_DESSERVI, TRAJET, SERVICE,  ARRET, ITINERAIRE, AGENCE;

CREATE TABLE AGENCE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOM VARCHAR(255) NOT NULL,
    URL VARCHAR(255) NOT NULL,
    FUSEAU_HORAIRE VARCHAR(64) NOT NULL,
    TELEPHONE VARCHAR(32) NOT NULL,
    SIEGE TEXT NOT NULL,
    UNIQUE(NOM)
);

CREATE TABLE ARRET(
    ID INT PRIMARY KEY,
    NOM VARCHAR(255) NOT NULL,
    LATITUDE DECIMAL(11, 8) NOT NULL,
    LONGITUDE DECIMAL (11, 8) NOT NULL,
    CONSTRAINT CHK_ARRET CHECK (LATITUDE BETWEEN -90 AND 90),
    CONSTRAINT CHK_ARRET2 CHECK (LONGITUDE BETWEEN -180 AND 180)
);

CREATE TABLE ITINERAIRE (
    ID INT PRIMARY KEY,
    AGENCE_ID INT NOT NULL,
    TYPE VARCHAR(10) NOT NULL,
    NOM VARCHAR(255) NOT NULL,
    FOREIGN KEY (AGENCE_ID) REFERENCES AGENCE(ID),
    CONSTRAINT UC_ITI UNIQUE KEY(NOM, TYPE)
);

CREATE TABLE ARRET_DESSERVI (
    ITINERAIRE_ID INT NOT NULL,
    ARRET_ID INT NOT NULL,
    SEQUENCE INT NOT NULL,
    PRIMARY KEY (ITINERAIRE_ID, ARRET_ID),
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID),
    FOREIGN KEY (ARRET_ID) REFERENCES ARRET(ID)
);

CREATE TABLE SERVICE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOM VARCHAR(100) UNIQUE NOT NULL,
    LUNDI BOOLEAN DEFAULT FALSE,
    MARDI BOOLEAN DEFAULT FALSE,
    MERCREDI BOOLEAN DEFAULT FALSE,
    JEUDI BOOLEAN DEFAULT FALSE,
    VENDREDI BOOLEAN DEFAULT FALSE,
    SAMEDI BOOLEAN DEFAULT FALSE,
    DIMANCHE BOOLEAN DEFAULT FALSE,
    DATE_DEBUT DATE NOT NULL,
    DATE_FIN DATE,
    CONSTRAINT SERVICE_DATE CHECK (DATE_FIN IS NULL OR DATE_DEBUT <= DATE_FIN)
);

CREATE TABLE TRAJET (
    ID VARCHAR(100) NOT NULL PRIMARY KEY,
    SERVICE_ID INT NOT NULL,
    ITINERAIRE_ID INT NOT NULL,
    DIRECTION TINYINT NOT NULL CHECK (DIRECTION IN (0, 1)),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID),
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID)
);

CREATE TABLE HORRAIRE (
    TRAJET_ID VARCHAR(100) NOT NULL,
    ITINERAIRE_ID INT NOT NULL,
    ARRET_ID INT NOT NULL,
    HEURE_ARRIVEE TIME,
    HEURE_DEPART TIME,
    PRIMARY KEY (TRAJET_ID, ITINERAIRE_ID, ARRET_ID),
    FOREIGN KEY (TRAJET_ID) REFERENCES TRAJET(ID),
    FOREIGN KEY (ITINERAIRE_ID) REFERENCES ITINERAIRE(ID),
    FOREIGN KEY (ARRET_ID) REFERENCES ARRET(ID),
    CONSTRAINT HORRAIRE_HEURE CHECK (HEURE_ARRIVEE <= HEURE_DEPART)
);

CREATE TABLE EXCEPTION (
    SERVICE_ID INT NOT NULL,
    DATE DATE NOT NULL,
    CODE TINYINT NOT NULL CHECK (CODE IN (1, 2)), -- 1 = ajout et 2 = supprime
    PRIMARY KEY (SERVICE_ID, DATE),
    FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(ID)
);

CREATE TABLE LANGUEPRINCIPALE (
    AGENCE_ID INT NOT NULL,
    LANGUE CHAR(2) NOT NULL, -- Code ISO 639-1 à 2 lettres
    PRIMARY KEY (AGENCE_ID, LANGUE),
    FOREIGN KEY (AGENCE_ID) REFERENCES AGENCE(ID)
);

CREATE VIEW TRAJETS_INDEX AS
SELECT 
    trajet.ID AS TRAJET_ID,
    trajet.ITINERAIRE_ID,
    itineraire.NOM AS NOM_ITINERAIRE,
    trajet.SERVICE_ID,
    trajet.DIRECTION,
    ROW_NUMBER() OVER (PARTITION BY trajet.ITINERAIRE_ID ORDER BY CAST(trajet.ID AS UNSIGNED)) AS NUMERO_TRAJET
FROM 
    TRAJET trajet
JOIN 
    ITINERAIRE itineraire ON trajet.ITINERAIRE_ID = itineraire.ID;

-- Vue pour les services actifs (pour afficher les services disponibles -> question 4)
-- création de la vue 

drop view if exists ALL_JOURS_SERVICES; 
create view ALL_JOURS_SERVICES as
WITH RECURSIVE DATES as( 
    SELECT ID,NOM,DATE_DEBUT,DATE_FIN 
    FROM SERVICE 
    UNION ALL 
    SELECT ID,NOM,DATE_ADD(DATE_DEBUT,INTERVAL 1 DAY),DATE_FIN 
    FROM DATES WHERE DATE_ADD(DATE_DEBUT, INTERVAL 1 DAY) <= DATE_FIN
) 
select ID,NOM,DATE_DEBUT as JOUR from DATES; 

-- seconde vue pour la Q4 
drop view if exists DATES_SERVICES; 
create view DATES_SERVICES as 
select AJS.ID, AJS.NOM, AJS.JOUR
from ALL_JOURS_SERVICES as AJS
join SERVICE as S on S.ID = AJS.ID
where ((weekday(AJS.JOUR) = 0 and S.LUNDI = 1) OR
       (weekday(AJS.JOUR) = 1 and S.MARDI = 1) OR 
       (weekday(AJS.JOUR) = 2 and S.MERCREDI = 1) OR 
       (weekday(AJS.JOUR) = 3 and S.JEUDI = 1) OR 
       (weekday(AJS.JOUR) = 4 and S.VENDREDI = 1) OR 
       (weekday(AJS.JOUR) = 5 and S.SAMEDI = 1) OR 
       (weekday(AJS.JOUR) = 6 and S.DIMANCHE = 1))
and not exists(
    select 1 
    from EXCEPTION as E
    where E.CODE = 2 and AJS.JOUR = E.DATE and AJS.ID = E.SERVICE_ID)
union 
select E.SERVICE_ID, S.NOM, E.DATE
from EXCEPTION as E
join SERVICE as S on E.SERVICE_ID = S.ID 
where E.CODE = 1;



-- 2. Chargement des données depuis les CSV
LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/AGENCE.csv'
IGNORE INTO TABLE AGENCE
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ID,NOM, URL, FUSEAU_HORAIRE, TELEPHONE, SIEGE);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/ARRET.csv'
IGNORE INTO TABLE ARRET
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
ESCAPED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ID, NOM, LATITUDE, LONGITUDE);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/ITINERAIRE.csv'
IGNORE INTO TABLE ITINERAIRE
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
ESCAPED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ID,AGENCE_ID,TYPE,NOM);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/ARRET_DESSERVI.csv'
IGNORE INTO TABLE ARRET_DESSERVI
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ITINERAIRE_ID,ARRET_ID,SEQUENCE);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/SERVICE.csv'
IGNORE INTO TABLE SERVICE
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
ESCAPED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ID,NOM, LUNDI, MARDI, MERCREDI, JEUDI, VENDREDI, SAMEDI, DIMANCHE, DATE_DEBUT, DATE_FIN);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/TRAJET.csv'
IGNORE INTO TABLE TRAJET
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ID,SERVICE_ID, ITINERAIRE_ID, DIRECTION);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/HORRAIRE.csv'
IGNORE INTO TABLE HORRAIRE
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(TRAJET_ID, ITINERAIRE_ID, ARRET_ID,  @HEURE_ARRIVEE, @HEURE_DEPART)
SET 
    HEURE_ARRIVEE = NULLIF(@HEURE_ARRIVEE, ''),
    HEURE_DEPART = NULLIF(@HEURE_DEPART, '');

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/EXCEPTION.csv'
IGNORE INTO TABLE EXCEPTION
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(SERVICE_ID, DATE, CODE);

LOAD DATA INFILE '/docker-entrypoint-initdb.d/data/LANGUEPRINCIPALE.csv'
IGNORE INTO TABLE LANGUEPRINCIPALE
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(AGENCE_ID, LANGUE);
